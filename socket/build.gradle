apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

//apply plugin: 'com.novoda.bintray-release'
//apply plugin: 'com.github.dcendents.android-maven'
//apply plugin: "com.jfrog.bintray"

// This is the library version used when deploying the artifact
version = "1.0.0"

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
//    sourceSets {
//        main.java.srcDirs += 'src/main/kotlin'
//    }
}



dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation parent.ext.libRxKotlin
    implementation parent.ext.libRxJava
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

//publish {
//    userOrg = 'zyelite'
//    groupId = 'com.zy.elite'
//    artifactId = 'android-socket'
//    publishVersion = '0.1.0'
//    desc = 'android-socket'
//    website = 'https://github.com/ZyElite/SocketClient'
//}

//def siteUrl = 'https://github.com/ZyElite/SocketClient'      // Homepage URL of the library
//def gitUrl = 'https://github.com/ZyElite/SocketClient.git'   // Git repository URL
//group = "com.zy.elite"                      // Maven Group ID for the artifact
//
//install {
//    repositories.mavenInstaller {
//        // This generates POM.xml with proper parameters
//        pom {
//            project {
//                packaging 'aar'
//
//                // Add your description here
//                name 'socket-android'
//                description = 'socket-android'
//                url siteUrl
//
//                // Set your license
//                licenses {
//                    license {
//                        name 'The Apache Software License, Version 2.0'
//                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    }
//                }
//                developers {
//                    developer {
//                        id 'socket'
//                        name 'ZyElite'
//                        email 'Zy.Elite@foxmail.com'
//                    }
//                }
//                scm {
//                    connection gitUrl
//                    developerConnection gitUrl
//                    url siteUrl
//
//                }
//            }
//        }
//    }
//}
//
//task sourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier = 'sources'
//}
//
//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}
//
//Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())
//
//// https://github.com/bintray/gradle-bintray-plugin
//bintray {
//    user = properties.getProperty("bintray.user")
//    key = properties.getProperty("bintray.apikey")
//
//    configurations = ['archives']
//    pkg {
//        repo = "maven"
//        // it is the name that appears in bintray when logged
//        name = "socket-android"
//        websiteUrl = siteUrl
//        vcsUrl = gitUrl
//        licenses = ["Apache-2.0"]
//        publish = true
//        version {
//            gpg {
//                sign = true //Determines whether to GPG sign the files. The default is false
//                passphrase = properties.getProperty("bintray.gpg.password")
//                //Optional. The passphrase for GPG signing'
//            }
////            mavenCentralSync {
////                sync = true //Optional (true by default). Determines whether to sync the version to Maven Central.
////                user = properties.getProperty("bintray.oss.user") //OSS user token
////                password = properties.getProperty("bintray.oss.password") //OSS user password
////                close = '1' //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
////            }
//        }
//    }
//}